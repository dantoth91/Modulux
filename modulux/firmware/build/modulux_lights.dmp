
build/modulux_lights.elf:     file format elf32-littlearm
build/modulux_lights.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000731

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x000032b8 memsz 0x000032b8 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x080032b8 align 2**15
         filesz 0x0000000c memsz 0x0000000c flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x000013b8 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000001ac  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003108  080001b0  080001b0  000081b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  3 .data         0000000c  20000800  080032b8  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000bac  2000080c  2000080c  00018000  2**3
                  ALLOC
  5 .debug_info   000158c6  00000000  00000000  0001080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00004da3  00000000  00000000  000260d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000b58  00000000  00000000  0002ae75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 000014c0  00000000  00000000  0002b9cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00006418  00000000  00000000  0002ce8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002c42  00000000  00000000  000332a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000070  00000000  00000000  00035ee7  2**0
                  CONTENTS, READONLY
 12 .ARM.attributes 00000033  00000000  00000000  00035f57  2**0
                  CONTENTS, READONLY
 13 .debug_frame  00001cc4  00000000  00000000  00035f8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000074c1  00000000  00000000  00037c50  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080001b0 l    d  .text	00000000 .text
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
2000080c l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08002f90 l     F .text	00000034 ds18b20_polling_thread
08003020 l     F .text	0000004c Thread1
20000f90 l     O .bss	00000150 waThread1
20000800 l     O .data	0000000c uartCfg
200010e8 l     O .bss	000002d0 wa_ds18b20_polling
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000914 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
2000080c l     O .bss	00000048 mainthread.4773
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000c30 l     F .text	0000005c wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08001150 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000964 l     O .bss	00000004 endmem
20000968 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000970 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 serial.c
08001630 l     F .text	00000006 readt
08001640 l     F .text	0000000a read
08001650 l     F .text	00000006 writet
08001660 l     F .text	0000000a write
08001670 l     F .text	00000006 gett
08001680 l     F .text	0000000a get
08001690 l     F .text	00000006 putt
080016a0 l     F .text	0000000a put
080030a0 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 stm32_dma.c
20000990 l     O .bss	00000080 dma_isr_redir
20000a10 l     O .bss	00000004 dma_streams_mask
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 can_lld.c
08001e80 l     F .text	000002aa can_lld_set_filters
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
20000a80 l     O .bss	00000002 dummytx
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
08002810 l     F .text	00000014 notify1
08002830 l     F .text	00000014 notify2
08002850 l     F .text	00000014 notify6
08002870 l     F .text	0000012a serve_interrupt
08003180 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 can_comm.c
08002b80 l     F .text	00000090 can_rx
08002c10 l     F .text	0000001e Villog
08003290 l     O .text	00000008 cancfg
20000c30 l     O .bss	00000150 wa_villog
20000d80 l     O .bss	00000014 rxmsg
20000d98 l     O .bss	000001d0 can_rx_wa
00000000 l    df *ABS*	00000000 ds18b20.c
08002c70 l     F .text	00000030 Delay_us
00000000 l    df *ABS*	00000000 chregistry.c
08003190 g     O .text	000000fc pal_default_config
08000900  w    F .text	00000002 Vector58
08000900  w    F .text	00000002 VectorE8
08000900  w    F .text	00000002 Vector9C
08000a30 g     F .text	00000048 nvicEnableVector
08000900  w    F .text	00000002 VectorAC
08000fc0 g     F .text	0000000a chThdExit
08000b40 g     F .text	00000058 chSysTimerHandlerI
080010e0 g     F .text	00000020 chEvtBroadcastFlagsI
08000d00 g     F .text	00000040 chSchGoSleepTimeoutS
08000900  w    F .text	00000002 Vector1A0
08000900  w    F .text	00000002 Vector5C
08000900  w    F .text	00000002 NMIVector
08000900  w    F .text	00000002 Vector11C
08001a90 g     F .text	00000136 dmaInit
08000900  w    F .text	00000002 Vector19C
080005d8 g     F .text	00000136 __divsf3
08002130 g     F .text	0000004c Vector8C
08001080 g     F .text	00000022 chEvtUnregister
08000900  w    F .text	00000002 VectorDC
08000900  w    F .text	00000002 Vector168
08000000 g     O startup	000001ac _vectors
08000cd0 g     F .text	00000028 chSchGoSleepS
08000900  w    F .text	00000002 Vector110
200013b8 g       *ABS*	00000000 __heap_base__
080032b8 g       *ABS*	00000000 _etext
08001910 g     F .text	00000028 Vector120
08000e90 g     F .text	0000006c chThdCreateI
00000000         *UND*	00000000 msObjectInit
08000900  w    F .text	00000002 VectorC8
0800025c g     F .text	00000160 __aeabi_fadd
08000258 g     F .text	00000164 __subsf3
08002d00 g     F .text	0000004a OneWire_WriteBit
08000d40 g     F .text	00000058 chSchWakeupS
08001730 g     F .text	0000003c sdIncomingDataI
08001330 g     F .text	00000046 chOQGetI
08000c90 g     F .text	00000016 _scheduler_init
08000f00 g     F .text	0000002a chThdCreateStatic
080021f0 g     F .text	00000070 Vector94
08000900  w    F .text	00000002 VectorA8
08000900  w    F .text	00000002 VectorB4
20000b40 g     O .bss	00000078 SD2
08000cb0 g     F .text	00000020 chSchReadyI
080001ac g       startup	00000000 __fini_array_end
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000ba0 g     F .text	00000018 _vt_init
08002c30 g     F .text	0000003a can_commInit
08001470 g     F .text	00000020 _heap_init
080003c4 g     F .text	0000001c __aeabi_i2f
080017f0 g     F .text	0000002c Vector74
20000a48 g     O .bss	00000038 CAND1
08001490 g     F .text	0000002e halInit
08001520 g     F .text	00000004 canInit
08000900  w    F .text	00000002 Vector160
08000900  w    F .text	00000002 VectorEC
2000080c g       .bss	00000000 _bss_start
08000da0 g     F .text	00000040 chSchDoRescheduleBehind
08000900  w    F .text	00000002 UsageFaultVector
2001c000 g       *ABS*	00000000 __heap_end__
08000900  w    F .text	00000002 DebugMonitorVector
080023d0 g     F .text	000000c8 can_lld_receive
08000900  w    F .text	00000002 Vector40
08000900  w    F .text	00000002 VectorF8
08000900  w    F .text	00000002 Vector108
08000730 g     F .text	000001cc ResetHandler
08001240 g     F .text	00000072 chIQReadTimeout
08000900  w    F .text	00000002 VectorBC
08000900  w    F .text	00000002 Vector190
08001a00 g     F .text	0000002c Vector150
08001940 g     F .text	0000002c Vector124
08000940 g     F .text	00000034 _port_init
08001bd0 g     F .text	000000a6 hal_lld_init
08002720 g     F .text	00000048 spi_lld_init
08000f80 g     F .text	00000040 chThdExitS
08000900  w    F .text	00000002 Vector148
08002390 g     F .text	00000038 can_lld_is_rx_nonempty
08000900  w    F .text	00000002 Vector188
080014f0 g     F .text	00000004 adcInit
00000000         *UND*	00000000 _sbrk
00000000         *UND*	00000000 shellInit
08000900  w    F .text	00000002 PendSVVector
08000900  w    F .text	00000002 Vector198
08000900  w    F .text	00000002 Vector118
08000bc0 g     F .text	00000038 chVTSetI
08000900  w    F .text	00000002 Vector64
200013b8 g       .bss	00000000 _bss_end
08000258 g     F .text	00000164 __aeabi_fsub
08000720  w    F .text	00000002 _default_exit
08002650 g     F .text	000000c8 _pal_lld_setgroupmode
08001d90 g     F .text	00000038 adc_lld_init
08000900  w    F .text	00000002 VectorCC
08002a00 g     F .text	0000006a sd_lld_init
08000fd0 g     F .text	00000008 chSemInit
08000900  w    F .text	00000002 Vector54
080003f0 g     F .text	0000007c __floatdisf
08002e30 g     F .text	00000040 OneWire_Reset
08002260 g     F .text	00000078 Vector98
20000a14 g     O .bss	00000034 ADCD1
08002e70 g     F .text	0000001e DS18B20_Init
080029c0 g     F .text	00000016 VectorD8
08002e90 g     F .text	00000064 DS18B20_StartConversion
08000900  w    F .text	00000002 Vector138
08000900  w    F .text	00000002 Vector24
08000e20 g     F .text	00000014 chSchDoReschedule
08000ad0 g     F .text	00000064 chSysInit
08000900  w    F .text	00000002 Vector178
08000f30 g     F .text	00000018 chThdSleep
08001180 g     F .text	0000001e chIQInit
080030c0 g     O .text	000000c0 _stm32_dma_streams
080018b0 g     F .text	0000002c Vector84
20000f68 g     O .bss	00000028 DS18B20_SERIAL_NUMBER
080009f0 g     F .text	0000001a SysTickVector
08001780 g     F .text	00000010 spiObjectInit
08002d50 g     F .text	00000052 OneWire_WriteByte
08001c80 g     F .text	00000104 stm32_clock_init
08000900  w    F .text	00000002 Vector1A4
080024a0 g     F .text	000001a2 _pal_lld_init
080016b0 g     F .text	00000004 sdInit
08000900  w    F .text	00000002 BusFaultVector
08000900  w    F .text	00000002 VectorD0
08001400 g     F .text	0000002c _core_init
080027f0 g     F .text	0000001c pwm_lld_init
08001710 g     F .text	0000001a sdStart
080003c4 g     F .text	0000001c __floatsisf
08000900  w    F .text	00000002 Vector140
08000900  w    F .text	00000002 VectorE4
08000900  w    F .text	00000002 VectorC0
08001a60 g     F .text	0000002c Vector158
080019d0 g     F .text	00000028 Vector130
08000a10 g     F .text	00000010 _port_switch
0001c000 g       *ABS*	00000000 __ram_size__
08000920 g     F .text	00000012 SVCallVector
08000710  w    F .text	00000002 __late_init
20000938 g     O .bss	00000010 vtlist
08000900  w    F .text	00000002 HardFaultVector
08000980 g     F .text	00000070 _port_irq_epilogue
08000900  w    F .text	00000002 Vector134
08001430 g     F .text	00000034 chCoreAlloc
080005d8 g     F .text	00000136 __aeabi_fdiv
00000000         *UND*	00000000 shellCreate
08002310 g     F .text	00000078 can_lld_start
08000900  w    F .text	00000002 VectorF0
080019a0 g     F .text	0000002c Vector12C
20000a84 g     O .bss	00000030 SPID2
08001610 g     F .text	00000004 pwmInit
080003e0 g     F .text	0000008c __floatundisf
08000900  w    F .text	00000002 Vector13C
08002cb0 g     F .text	00000010 OneWire_DataPinOutput
080003bc g     F .text	00000024 __aeabi_ui2f
08000900  w    F .text	00000002 Vector100
080032b8 g       *ABS*	00000000 _textdata
08000900  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
08000900  w    F .text	00000002 VectorF4
08000900  w    F .text	00000002 MemManageVector
08001530 g     F .text	00000040 canObjectInit
080001ac g       startup	00000000 __fini_array_start
08002ca0 g     F .text	00000010 OneWire_DataPinInput
08000f50 g     F .text	00000024 chThdSleepUntil
080001b0 g     F .text	0000009c main
08001790 g     F .text	00000028 Vector6C
080003f0 g     F .text	0000007c __aeabi_l2f
20000948 g     O .bss	0000001c rlist
20000ab4 g     O .bss	00000014 PWMD4
08000900  w    F .text	00000002 VectorA0
08001770 g     F .text	00000004 spiInit
08001500 g     F .text	00000016 adcObjectInit
080001ac g       startup	00000000 __init_array_end
08000900  w    F .text	00000002 VectorC4
08001850 g     F .text	00000028 Vector7C
08000900  w    F .text	00000002 Vector180
08001040 g     F .text	0000000a chMtxInit
080003e0 g     F .text	0000008c __aeabi_ul2f
08000ab0 g     F .text	00000014 _idle_thread
08001380 g     F .text	00000074 chOQWriteTimeout
08001620 g     F .text	0000000a pwmObjectInit
08000900  w    F .text	00000002 VectorB0
08003080 g     O .text	00000016 ch_debug
08000470 g     F .text	00000168 __mulsf3
08002180 g     F .text	00000070 Vector90
080010b0 g     F .text	0000002e chEvtSignalI
08000900  w    F .text	00000002 Vector114
20000000 g       *ABS*	00000000 __ram_start__
08002fd0 g     F .text	0000003e serial_init
08000a20 g     F .text	00000010 _port_thread_start
08000900  w    F .text	00000002 Vector164
08000900  w    F .text	00000002 Vector60
08000900  w    F .text	00000002 Vector1C
08002f00 g     F .text	0000008c DS18B20_GetTemp
08000de0 g     F .text	0000003c chSchDoRescheduleAhead
08000900  w    F .text	00000002 Vector17C
08000900  w    F .text	00000002 Vector48
20000bb8 g     O .bss	00000078 SD6
20000400 g       .stacks	00000000 __process_stack_base__
08000900  w    F .text	00000002 Vector1A8
08000900  w    F .text	00000002 Vector16C
080022e0 g     F .text	00000028 can_lld_init
08000250 g     F .text	0000016c __aeabi_frsub
200010e0 g     O .bss	00000004 currentTemp
080017c0 g     F .text	0000002c Vector70
080029a0 g     F .text	00000016 VectorD4
08000a80 g     F .text	00000030 nvicSetSystemHandlerPriority
08000470 g     F .text	00000168 __aeabi_fmul
20000858 g     O .bss	000000e0 _idle_thread_wa
080012c0 g     F .text	0000001c chOQInit
080011f0 g     F .text	00000048 chIQGetTimeout
20000800 g       .data	00000000 _data
08000900  w    F .text	00000002 Vector4C
08002cc0 g     F .text	00000036 OneWire_ReadBit
08000900  w    F .text	00000002 Vector144
08001880 g     F .text	0000002c Vector80
080011a0 g     F .text	0000004e chIQPutI
08000910 g     F .text	00000006 _port_switch_from_isr
080029e0 g     F .text	00000016 Vector15C
08000900  w    F .text	00000002 Vector68
08001100 g     F .text	00000048 chEvtWaitAnyTimeout
20000400 g       .stacks	00000000 __main_stack_end__
08001820 g     F .text	0000002c Vector78
08003010 g     F .text	00000010 serial_send
2001c000 g       *ABS*	00000000 __ram_end__
2000080c g       .data	00000000 _edata
200013b8 g       *ABS*	00000000 _end
08001570 g     F .text	0000003a canStart
08000c00 g     F .text	00000024 chVTResetI
08000900 g     F .text	00000002 _unhandled_exception
08000900  w    F .text	00000002 Vector170
080016c0 g     F .text	00000044 sdObjectInit
08001e00 g     F .text	00000074 Vector88
08001050 g     F .text	0000002a chEvtRegisterMask
20000400 g       .stacks	00000000 __main_thread_stack_base__
080003bc g     F .text	00000024 __floatunsisf
080015b0 g     F .text	00000052 canReceive
08000900  w    F .text	00000002 Vector104
08000900  w    F .text	00000002 Vector184
08000900  w    F .text	00000002 Vector10C
080001ac g       startup	00000000 __init_array_start
20000ac8 g     O .bss	00000078 SD1
08000900  w    F .text	00000002 Vector14C
08000e40 g     F .text	00000046 _thread_init
08000900  w    F .text	00000002 Vector50
08001dd0 g     F .text	00000030 adc_lld_stop_conversion
08000900  w    F .text	00000002 Vector194
08001a30 g     F .text	0000002c Vector154
080012e0 g     F .text	00000050 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08000900  w    F .text	00000002 Vector44
08000900  w    F .text	00000002 Vector28
08002b70 g     F .text	00000002 boardInit
08002770 g     F .text	00000078 VectorB8
08002a70 g     F .text	000000ec sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
080018e0 g     F .text	0000002c VectorFC
20000800 g       .stacks	00000000 __process_stack_end__
08000900  w    F .text	00000002 Vector34
08002b60 g     F .text	00000004 __early_init
08001020 g     F .text	00000020 chSemSignalI
08001970 g     F .text	0000002c Vector128
0800025c g     F .text	00000160 __addsf3
08000900  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080014c0 g     F .text	00000028 halIsCounterWithin
08002db0 g     F .text	00000072 OneWire_ReadByte
08000900  w    F .text	00000002 Vector20
08000900  w    F .text	00000002 Vector18C
08000fe0 g     F .text	0000003c chSemWaitTimeoutS
08000900  w    F .text	00000002 Vector174


